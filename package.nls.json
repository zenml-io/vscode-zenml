{
  "extension.description": "Integrates ZenML directly into VS Code, enhancing machine learning workflow with support for pipelines, stacks, and server management.",
  "zenml.promptForInterpreter": "Prompt to select a Python interpreter from the command palette in VSCode.",
  "command.connectServer": "Establishes a connection to a specified ZenML server.",
  "command.disconnectServer": "Disconnects from the currently connected ZenML server.",
  "command.refreshServerStatus": "Refreshes the status of the ZenML server to reflect the current state.",
  "command.refreshStackView": "Refreshes the stack view to display the latest information about ZenML stacks.",
  "command.setStackItemsPerPage": "Sets the number of stacks to display per page in the stack view.",
  "command.nextStackPage": "Navigates to the next page of stacks in the stack view.",
  "command.previousStackPage": "Navigates to the previous page of stacks in the stack view.",
  "command.getActiveStack": "Retrieves the currently active stack in ZenML.",
  "command.renameStack": "Renames a specified ZenML stack.",
  "command.setActiveStack": "Sets a specified stack as the active ZenML stack.",
  "command.copyStack": "Creates a copy of a specified ZenML stack.",
  "command.refreshPipelineView": "Refreshes the pipeline view to display the latest information on ZenML pipeline runs.",
  "command.setPipelineRunsPerPage": "Sets the number of pipeline runs to display per page in the pipeline view.",
  "command.nextPipelineRunsPage": "Navigates to the next page of pipeline runs in the pipeline view.",
  "command.previousPipelineRunsPage": "Navigates to the previous page of pipeline runs in the pipeline view.",
  "command.deletePipelineRun": "Deletes a specified ZenML pipeline run.",
  "command.setPythonInterpreter": "Sets the Python interpreter for ZenML-related tasks within the VS Code environment.",
  "command.refreshEnvironmentView": "Updates the Environment View with the latest ZenML configuration and system information.",
  "command.restartLspServer": "Restarts the Language Server to ensure the latest configurations are used.",
  "settings.args.description": "Specify arguments to pass to the ZenML CLI. Provide each argument as a separate item in the array.",
  "settings.path.description": "Defines the path to the ZenML CLI. If left as an empty array, the default system path will be used.",
  "settings.importStrategy.description": "Determines which ZenML CLI to use. Options include using a bundled version (`useBundled`) or attempting to use the CLI installed in the current Python environment (`fromEnvironment`).",
  "settings.showNotifications.description": "Controls when notifications are shown by this extension.",
  "settings.showNotifications.off.description": "All notifications are turned off, any errors or warnings when formatting Python files are still available in the logs.",
  "settings.showNotifications.onError.description": "Notifications are shown only in the case of an error when formatting Python files.",
  "settings.showNotifications.onWarning.description": "Notifications are shown for any errors and warnings when formatting Python files.",
  "settings.showNotifications.always.description": "Notifications are show for anything that the server chooses to show when formatting Python files.",
  "settings.interpreter.description": "Sets the path to the Python interpreter used by ZenML. This is used for launching the server and subprocesses. Leave empty to use the default interpreter.",
  "settings.serverUrl.description": "URL to connect to the ZenML server.",
  "settings.accessToken.description": "Access token required for authenticating with the ZenML server (not necessary currently).",
  "settings.activeStackId.description": "Identifier for the currently active stack in ZenML. This is used to specify which stack is being used for operations."
}
