{
  "name": "zenml",
  "publisher": "zenml-io",
  "displayName": "ZenML",
  "description": "",
  "preview": true,
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.86.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/zenml-io/vscode-zenml"
  },
  "categories": [
    "Machine Learning",
    "Visualization"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onLanguage:python",
    "workspaceContains:*.py"
  ],
  "extensionDependencies": [
    "ms-python.python"
  ],
  "capabilities": {
    "virtualWorkspaces": {
      "supported": false,
      "description": "Virtual Workspaces are not supported with <pytool-display-name>."
    }
  },
  "main": "./dist/extension.js",
  "serverInfo": {
    "name": "ZenML Python",
    "module": "zenml"
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool source-map --config ./webpack.config.js",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "format": "prettier --ignore-path .gitignore --write \"**/*.+(ts|json)\"",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "vsce-package": "vsce package -o zenml.vsix"
  },
  "contributes": {
    "configuration": {
      "title": "ZenML",
      "properties": {
        "zenml.args": {
          "default": [],
          "description": "Arguments passed in. Each argument is a separate item in the array.",
          "items": {
            "type": "string"
          },
          "scope": "resource",
          "type": "array"
        },
        "zenml.path": {
          "default": [],
          "scope": "resource",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "zenml.importStrategy": {
          "default": "useBundled",
          "enum": [
            "useBundled",
            "fromEnvironment"
          ],
          "enumDescriptions": [
            "Always use the bundled version of `<pytool-module>`.",
            "Use `<pytool-module>` from environment, fallback to bundled version only if `<pytool-module>` not available in the environment."
          ],
          "scope": "window",
          "type": "string"
        },
        "zenml.interpreter": {
          "default": [],
          "description": "When set to a path to python executable, extension will use that to launch the server and any subprocess.",
          "scope": "resource",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "zenml.showNotifications": {
          "default": "off",
          "description": "Controls when notifications are shown by this extension.",
          "enum": [
            "off",
            "onError",
            "onWarning",
            "always"
          ],
          "enumDescriptions": [
            "All notifications are turned off, any errors or warning are still available in the logs.",
            "Notifications are shown only in the case of an error.",
            "Notifications are shown for errors and warnings.",
            "Notifications are show for anything that the server chooses to show."
          ],
          "scope": "machine",
          "type": "string"
        },
        "zenml.venvPath": {
          "type": "string",
          "default": "",
          "description": "Path to the virtual environment where ZenML is installed. Leave empty if installed globally."
        },
        "zenml.serverUrl": {
          "type": "string",
          "default": "",
          "description": "ZenML Server URL"
        },
        "zenml.accessToken": {
          "type": "string",
          "default": "",
          "description": "Access token for the ZenML server"
        },
        "zenml.activeStackId": {
          "type": "string",
          "default": "",
          "description": "Active stack id for the ZenML server"
        },
        "zenml.activeStackName": {
          "type": "string",
          "default": "",
          "description": "Active stack name for the ZenML server"
        },
        "zenml.zenmlClientReady": {
          "type": "boolean",
          "default": false,
          "description": "ZenML Python client is ready"
        }
      }
    },
    "commands": [
      {
        "command": "zenml.restartServer",
        "title": "Restart LSP Server",
        "category": "Extension Utilities"
      },
      {
        "command": "zenml.connectServer",
        "title": "Connect",
        "category": "ZenML Server"
      },
      {
        "command": "zenml.disconnectServer",
        "title": "Disconnect",
        "category": "ZenML Server"
      },
      {
        "command": "zenml.refreshServerStatus",
        "title": "Refresh Server Status",
        "icon": "$(refresh)",
        "category": "ZenML Server"
      },
      {
        "command": "zenml.refreshStackView",
        "title": "Refresh Stack View",
        "icon": "$(refresh)",
        "category": "ZenML Stacks"
      },
      {
        "command": "zenml.getActiveStack",
        "title": "Get Active Stack",
        "category": "ZenML Stacks"
      },
      {
        "command": "zenml.renameStack",
        "title": "Rename Stack",
        "icon": "$(edit)",
        "category": "ZenML Stacks"
      },
      {
        "command": "zenml.setActiveStack",
        "title": "Set Active Stack",
        "icon": "$(check)",
        "category": "ZenML Stacks"
      },
      {
        "command": "zenml.copyStack",
        "title": "Copy Stack",
        "icon": "$(copy)",
        "category": "ZenML"
      },
      {
        "command": "zenml.refreshPipelineView",
        "title": "Refresh Pipeline View",
        "icon": "$(refresh)",
        "category": "ZenML Pipeline Runs"
      },
      {
        "command": "zenml.deletePipelineRun",
        "title": "Delete Pipeline Run",
        "icon": "$(trash)",
        "category": "ZenML Pipeline Runs"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "zenml",
          "title": "ZenML",
          "icon": "resources/logo.png"
        }
      ]
    },
    "views": {
      "zenml": [
        {
          "id": "zenmlServerView",
          "name": "Server",
          "icon": "$(vm)"
        },
        {
          "id": "zenmlStackView",
          "name": "Stacks",
          "icon": "$(layers)"
        },
        {
          "id": "zenmlPipelineView",
          "name": "Pipeline Runs",
          "icon": "$(beaker)"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "when": "view == zenmlServerView",
          "command": "zenml.connectServer",
          "group": "navigation"
        },
        {
          "when": "view == zenmlServerView",
          "command": "zenml.disconnectServer",
          "group": "navigation"
        },
        {
          "when": "view == zenmlServerView",
          "command": "zenml.refreshServerStatus",
          "group": "navigation"
        },
        {
          "when": "view == zenmlStackView",
          "command": "zenml.refreshStackView",
          "group": "navigation"
        },
        {
          "when": "view == zenmlPipelineView",
          "command": "zenml.refreshPipelineView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "when": "view == zenmlStackView && viewItem == stack",
          "command": "zenml.setActiveStack",
          "group": "inline@1"
        },
        {
          "when": "view == zenmlStackView && viewItem == stack",
          "command": "zenml.renameStack",
          "group": "inline@2"
        },
        {
          "command": "zenml.copyStack",
          "when": "view == zenmlStackView && viewItem == stack",
          "group": "inline@3"
        },
        {
          "command": "zenml.deletePipelineRun",
          "when": "view == zenmlPipelineView && viewItem == pipelineRun",
          "group": "inline"
        }
      ]
    }
  },
  "devDependencies": {
    "@types/fs-extra": "^11.0.4",
    "@types/mocha": "^10.0.6",
    "@types/node": "^18.19.18",
    "@types/proxyquire": "^1.3.31",
    "@types/sinon": "^17.0.3",
    "@types/vscode": "^1.86.0",
    "@types/webpack": "^5.28.5",
    "@typescript-eslint/eslint-plugin": "^6.19.1",
    "@typescript-eslint/parser": "^6.19.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/vsce": "^2.24.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "prettier": "^3.2.5",
    "proxyquire": "^2.1.3",
    "sinon": "^17.0.1",
    "ts-loader": "^9.5.1",
    "ts-mockito": "^2.6.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "tsconfig-paths-webpack-plugin": "^4.1.0",
    "typemoq": "^2.1.0",
    "typescript": "^5.3.3",
    "webpack": "^5.90.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@vscode/python-extension": "^1.0.5",
    "axios": "^1.6.7",
    "fs-extra": "^11.2.0",
    "vscode-languageclient": "^9.0.1"
  }
}
